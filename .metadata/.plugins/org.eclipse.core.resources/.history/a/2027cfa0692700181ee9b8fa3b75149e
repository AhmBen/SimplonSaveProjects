/*******************************************************************************
 * 2018, All rights reserved.
 *******************************************************************************/


// Start of user code (user defined imports)

// End of user code

/**
 * Description of Paper.
 * 
 * @author Utilisateur
 */
public class Paper {
	/**
	 * Description of the property idPaper.
	 */
	public int idPaper = 0;
	
	/**
	 * Description of the property articles.
	 */
	public HashSet<Article> articles = new HashSet<Article>();
	
	/**
	 * Description of the property .
	 */
	public Object  = ;
	
	// Start of user code (user defined attributes for Paper)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public Paper() {
		// Start of user code constructor for Paper)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for Paper)
	
	// End of user code
	/**
	 * Returns idPaper.
	 * @return idPaper 
	 */
	public int getIdPaper() {
		return this.idPaper;
	}
	
	/**
	 * Sets a value to attribute idPaper. 
	 * @param newIdPaper 
	 */
	public void setIdPaper(int newIdPaper) {
	    this.idPaper = newIdPaper;
	}

	/**
	 * Returns articles.
	 * @return articles 
	 */
	public HashSet<Article> getArticles() {
		return this.articles;
	}
	
	/**
	 * Sets a value to attribute articles. 
	 * @param newArticles 
	 */
	public void setArticles(HashSet<Article> newArticles) {
	    this.articles = newArticles;
	}
	
	/**
	 * Adds one attribute (if articles had a multiple cardinality)
	 * @param articleToAdd in articles
	 */
	public void addArticleToArticles(Article articleToAdd) {
		this.articles.add(articleToAdd);
	}
	
	/**
	 * Removes an attribute (if articles had a multiple cardinality)
	 * @param articleToRemove in articles
	 */
	public void removeArticleToArticles(Article articleToRemove) {
		this.articles.remove(articleToRemove);
	}
	
	/**
	 * Adds all the attribute (if articles had a multiple cardinality)
	 * @param articlesToAdd in articles
	 */
	public void addAllArticleToArticles(HashSet<Article> articlesToAdd) {
		this.articles.addAll(articlesToAdd);
	}
	
	/**
	 * Removes all the attribute (if articles had a multiple cardinality)
	 * @param articlesToRemove in articles
	 */
	public void removeAllArticleToArticles(HashSet<Article> articlesToRemove) {
		this.articles.removeAll(articlesToRemove);
	}

	/**
	 * Returns .
	 * @return  
	 */
	public Object get() {
		return this.;
	}
	
	/**
	 * Sets a value to attribute . 
	 * @param new 
	 */
	public void set(Object new) {
	    this. = new;
	}



}
